<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="DESKTOP-MNANVB9" name="todo.TodoSuite" tests="14" errors="0" failures="6" skipped="0" time="1.185" timestamp="2021-11-29T16:50:04">
          <properties>
      <property name="java.specification.version" value="17"/><property name="sun.cpu.isalist" value="amd64"/><property name="sun.jnu.encoding" value="Cp1252"/><property name="sun.arch.data.model" value="64"/><property name="sbt.supershell" value="false"/><property name="java.vendor.url" value="https://java.oracle.com/"/><property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-17.0.1\bin"/><property name="sun.java.command" value="C:\Users\Gustavo\AppData\Roaming\JetBrains\IdeaIC2021.2\plugins\Scala\launcher\sbt-launch.jar early(addPluginSbtFile=&quot;&quot;&quot;C:\Users\Gustavo\AppData\Local\Temp\idea1.sbt&quot;&quot;&quot;) ; set ideaPort in Global := 56763 ; idea-shell"/><property name="jdk.debug" value="release"/><property name="sun.stderr.encoding" value="cp850"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="java.version.date" value="2021-10-19"/><property name="java.home" value="C:\Program Files\Java\jdk-17.0.1"/><property name="file.separator" value="\"/><property name="java.vm.compressedOopsMode" value="32-bit"/><property name="line.separator" value="
"/><property name="sun.stdout.encoding" value="cp850"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="idea.installation.dir" value="C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.2.3"/><property name="user.script" value=""/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="java.runtime.version" value="17.0.1+12-LTS-39"/><property name="user.name" value="Gustavo"/><property name="log4j.ignoreTCL" value="true"/><property name="file.encoding" value="UTF-8"/><property name="jnidispatch.path" value="C:\Users\Gustavo\AppData\Local\Temp\jna-2047620235\jna6513973299772145847.dll"/><property name="jna.loaded" value="true"/><property name="java.io.tmpdir" value="C:\Users\Gustavo\AppData\Local\Temp\"/><property name="java.version" value="17.0.1"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="sun.os.patch.level" value=""/><property name="native.encoding" value="Cp1252"/><property name="java.library.path" value="C:\Program Files\Java\jdk-17.0.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\sbt\bin;C:\Users\Gustavo\AppData\Local\Microsoft\WindowsApps;;."/><property name="java.vendor" value="Oracle Corporation"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="java.class.path" value="C:\Users\Gustavo\AppData\Roaming\JetBrains\IdeaIC2021.2\plugins\Scala\launcher\sbt-launch.jar"/><property name="java.vm.vendor" value="Oracle Corporation"/><property name="user.variant" value=""/><property name="jline.shutdownhook" value="false"/><property name="user.timezone" value="America/Buenos_Aires"/><property name="java.vm.specification.version" value="17"/><property name="os.name" value="Windows 10"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="user.country" value="AR"/><property name="sun.cpu.endian" value="little"/><property name="user.home" value="C:\Users\Gustavo"/><property name="user.language" value="es"/><property name="swoval.tmpdir" value="C:\Users\Gustavo\.sbt\1.0"/><property name="jline.esc.timeout" value="0"/><property name="path.separator" value=";"/><property name="os.version" value="10.0"/><property name="jna.nosys" value="true"/><property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/><property name="sbt.log.noformat" value="true"/><property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/><property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/><property name="user.dir" value="C:\Proyectos Scala\todo"/><property name="os.arch" value="amd64"/><property name="idea.managed" value="true"/><property name="java.vm.info" value="mixed mode, sharing"/><property name="java.vm.version" value="17.0.1+12-LTS-39"/><property name="java.class.version" value="61.0"/>
    </properties>
          <testcase classname="todo.TodoSuite" name="Created tasks can be read" time="0.011">
                      
                    </testcase><testcase classname="todo.TodoSuite" name="Updated tasks can be read" time="0.004">
                      
                    </testcase><testcase classname="todo.TodoSuite" name="Deleted tasks are no longer read" time="0.006">
                      
                    </testcase><testcase classname="todo.TodoSuite" name="Tasks returns all inserted tasks in insertion order" time="0.015">
                      
                    </testcase><testcase classname="todo.TodoSuite" name="Tasks(tag) returns only tasks with given tag" time="0.01">
                      
                    </testcase><testcase classname="todo.TodoSuite" name="complete changes state to completed, if task is not already completed" time="0.009">
                      
                    </testcase><testcase classname="todo.TodoSuite" name="tags returns all tags" time="0.029">
                      
                    </testcase><testcase classname="todo.TodoSuite" name="Created tasks can be read-1" time="0.197">
                      
                    </testcase><testcase classname="todo.TodoSuite" name="Updated tasks can be read-1" time="0.27">
                      <failure message="munit.ComparisonFailException: C:\Proyectos Scala\todo\src\test\scala\todo\TodoSuite.scala:74
73:      assertTask(name, returned, task2)
[7m74:      assertTask(name, read, task2)[0m
75:    }
Using PersistentModel: We expected the task Task(Completed(2021-11-29T16:50:02.711095600-03:00[America/Buenos_Aires]),An inactive task,None,List(Tag(c))) but we received Task(Active,An active task,Some(The notes),List(Tag(a), Tag(b))) instead.
[1m=&gt; Obtained[0m
Task(
  state = Active(),
  description = &quot;An active task&quot;,
  notes = Some(
    value = &quot;The notes&quot;
  ),
  tags = List(
    Tag(
      tag = &quot;a&quot;
    ),
    Tag(
      tag = &quot;b&quot;
    )
  )
)
[1m=&gt; Diff[0m ([91m- obtained[0m, [92m+ expected[0m)
 Task(
[91m-  state = Active(),[0m
[91m-  description = &quot;An active task&quot;,[0m
[91m-  notes = Some([0m
[91m-    value = &quot;The notes&quot;[0m
[92m+  state = Completed([0m
[92m+    data = 2021-11-29T16:50:02.711095600-03:00[America/Buenos_Aires][0m
   ),
[92m+  description = &quot;An inactive task&quot;,[0m
[92m+  notes = None,[0m
   tags = List(
     Tag(
[91m-      tag = &quot;a&quot;[0m
[91m-    ),[0m
[91m-    Tag([0m
[91m-      tag = &quot;b&quot;[0m
[92m+      tag = &quot;c&quot;[0m
     )" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: munit.ComparisonFailException: C:\Proyectos Scala\todo\src\test\scala\todo\TodoSuite.scala:74
73:      assertTask(name, returned, task2)
[7m74:      assertTask(name, read, task2)[0m
75:    }
Using PersistentModel: We expected the task Task(Completed(2021-11-29T16:50:02.711095600-03:00[America/Buenos_Aires]),An inactive task,None,List(Tag(c))) but we received Task(Active,An active task,Some(The notes),List(Tag(a), Tag(b))) instead.
[1m=&gt; Obtained[0m
Task(
  state = Active(),
  description = &quot;An active task&quot;,
  notes = Some(
    value = &quot;The notes&quot;
  ),
  tags = List(
    Tag(
      tag = &quot;a&quot;
    ),
    Tag(
      tag = &quot;b&quot;
    )
  )
)
[1m=&gt; Diff[0m ([91m- obtained[0m, [92m+ expected[0m)
 Task(
[91m-  state = Active(),[0m
[91m-  description = &quot;An active task&quot;,[0m
[91m-  notes = Some([0m
[91m-    value = &quot;The notes&quot;[0m
[92m+  state = Completed([0m
[92m+    data = 2021-11-29T16:50:02.711095600-03:00[America/Buenos_Aires][0m
   ),
[92m+  description = &quot;An inactive task&quot;,[0m
[92m+  notes = None,[0m
   tags = List(
     Tag(
[91m-      tag = &quot;a&quot;[0m
[91m-    ),[0m
[91m-    Tag([0m
[91m-      tag = &quot;b&quot;[0m
[92m+      tag = &quot;c&quot;[0m
     )
	at munit.FunSuite.assertEquals(FunSuite.scala:11)
	at todo.TodoSuite.assertTask(TodoSuite.scala:38)
	at todo.TodoSuite.allTests$$anonfun$2(TodoSuite.scala:18)
	at munit.FunFixtures.munit$FunFixtures$FunFixture$$_$test$$anonfun$2$$anonfun$2$$anonfun$2(FunFixtures.scala:34)
</failure>
                    </testcase><testcase classname="todo.TodoSuite" name="Deleted tasks are no longer read-1" time="0.057">
                      <failure message="munit.ComparisonFailException: C:\Proyectos Scala\todo\src\test\scala\todo\TodoSuite.scala:88
87:                   Some(task2),
[7m88:                   s&quot;Using $name: The task that was not deleted was not returned when read&quot;)[0m
89:    }
Using PersistentModel: The task that was not deleted was not returned when read
[1m=&gt; Obtained[0m
None
[1m=&gt; Diff[0m ([91m- obtained[0m, [92m+ expected[0m)
[91m-None[0m
[92m+Some([0m
[92m+  value = Task([0m
[92m+    state = Completed([0m
[92m+      data = 2021-11-29T16:50:02.711095600-03:00[America/Buenos_Aires][0m
[92m+    ),[0m
[92m+    description = &quot;An inactive task&quot;,[0m
[92m+    notes = None,[0m
[92m+    tags = List([0m
[92m+      Tag([0m
[92m+        tag = &quot;c&quot;[0m
[92m+      )[0m
[92m+    )[0m
[92m+  )[0m
[92m+)[0m" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: munit.ComparisonFailException: C:\Proyectos Scala\todo\src\test\scala\todo\TodoSuite.scala:88
87:                   Some(task2),
[7m88:                   s&quot;Using $name: The task that was not deleted was not returned when read&quot;)[0m
89:    }
Using PersistentModel: The task that was not deleted was not returned when read
[1m=&gt; Obtained[0m
None
[1m=&gt; Diff[0m ([91m- obtained[0m, [92m+ expected[0m)
[91m-None[0m
[92m+Some([0m
[92m+  value = Task([0m
[92m+    state = Completed([0m
[92m+      data = 2021-11-29T16:50:02.711095600-03:00[America/Buenos_Aires][0m
[92m+    ),[0m
[92m+    description = &quot;An inactive task&quot;,[0m
[92m+    notes = None,[0m
[92m+    tags = List([0m
[92m+      Tag([0m
[92m+        tag = &quot;c&quot;[0m
[92m+      )[0m
[92m+    )[0m
[92m+  )[0m
[92m+)[0m
	at munit.FunSuite.assertEquals(FunSuite.scala:11)
	at todo.TodoSuite.allTests$$anonfun$3(TodoSuite.scala:88)
	at munit.FunFixtures.munit$FunFixtures$FunFixture$$_$test$$anonfun$2$$anonfun$2$$anonfun$2(FunFixtures.scala:34)
</failure>
                    </testcase><testcase classname="todo.TodoSuite" name="Tasks returns all inserted tasks in insertion order-1" time="0.172">
                      <failure message="munit.ComparisonFailException: C:\Proyectos Scala\todo\src\test\scala\todo\TodoSuite.scala:104
103:                   List((id1 -&gt; task1), (id2 -&gt; task2)),
[7m104:                   s&quot;Using $name: The list of tasks is different to the tasks that were created, or it is not in order of creation&quot;)[0m
105:    }
Using PersistentModel: The list of tasks is different to the tasks that were created, or it is not in order of creation
[1m=&gt; Obtained[0m
List(
  Tuple2(
    _1 = Id(
      toInt = 1
    ),
    _2 = Task(
      state = Completed(
        data = 2021-11-29T16:50:02.711095600-03:00[America/Buenos_Aires]
      ),
      description = &quot;An inactive task&quot;,
      notes = None,
      tags = List(
        Tag(
          tag = &quot;c&quot;
        )
      )
    )
  )
)
[1m=&gt; Diff[0m ([91m- obtained[0m, [92m+ expected[0m)
     _2 = Task(
[92m+      state = Active(),[0m
[92m+      description = &quot;An active task&quot;,[0m
[92m+      notes = Some([0m
[92m+        value = &quot;The notes&quot;[0m
[92m+      ),[0m
[92m+      tags = List([0m
[92m+        Tag([0m
[92m+          tag = &quot;a&quot;[0m
[92m+        ),[0m
[92m+        Tag([0m
[92m+          tag = &quot;b&quot;[0m
[92m+        )[0m
[92m+      )[0m
[92m+    )[0m
[92m+  ),[0m
[92m+  Tuple2([0m
[92m+    _1 = Id([0m
[92m+      toInt = 1[0m
[92m+    ),[0m
[92m+    _2 = Task([0m
       state = Completed(" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: munit.ComparisonFailException: C:\Proyectos Scala\todo\src\test\scala\todo\TodoSuite.scala:104
103:                   List((id1 -&gt; task1), (id2 -&gt; task2)),
[7m104:                   s&quot;Using $name: The list of tasks is different to the tasks that were created, or it is not in order of creation&quot;)[0m
105:    }
Using PersistentModel: The list of tasks is different to the tasks that were created, or it is not in order of creation
[1m=&gt; Obtained[0m
List(
  Tuple2(
    _1 = Id(
      toInt = 1
    ),
    _2 = Task(
      state = Completed(
        data = 2021-11-29T16:50:02.711095600-03:00[America/Buenos_Aires]
      ),
      description = &quot;An inactive task&quot;,
      notes = None,
      tags = List(
        Tag(
          tag = &quot;c&quot;
        )
      )
    )
  )
)
[1m=&gt; Diff[0m ([91m- obtained[0m, [92m+ expected[0m)
     _2 = Task(
[92m+      state = Active(),[0m
[92m+      description = &quot;An active task&quot;,[0m
[92m+      notes = Some([0m
[92m+        value = &quot;The notes&quot;[0m
[92m+      ),[0m
[92m+      tags = List([0m
[92m+        Tag([0m
[92m+          tag = &quot;a&quot;[0m
[92m+        ),[0m
[92m+        Tag([0m
[92m+          tag = &quot;b&quot;[0m
[92m+        )[0m
[92m+      )[0m
[92m+    )[0m
[92m+  ),[0m
[92m+  Tuple2([0m
[92m+    _1 = Id([0m
[92m+      toInt = 1[0m
[92m+    ),[0m
[92m+    _2 = Task([0m
       state = Completed(
	at munit.FunSuite.assertEquals(FunSuite.scala:11)
	at todo.TodoSuite.allTests$$anonfun$4(TodoSuite.scala:104)
	at munit.FunFixtures.munit$FunFixtures$FunFixture$$_$test$$anonfun$2$$anonfun$2$$anonfun$2(FunFixtures.scala:34)
</failure>
                    </testcase><testcase classname="todo.TodoSuite" name="Tasks(tag) returns only tasks with given tag-1" time="0.102">
                      <failure message="munit.ComparisonFailException: C:\Proyectos Scala\todo\src\test\scala\todo\TodoSuite.scala:112
111:
[7m112:      assertEquals(model.tasks(Tag(&quot;a&quot;)).toList, List(id1 -&gt; task1, id3 -&gt; task3))[0m
113:      assertEquals(model.tasks(Tag(&quot;b&quot;)).toList, List(id1 -&gt; task1))
values are not the same
[1m=&gt; Obtained[0m
List(
  Tuple2(
    _1 = Id(
      toInt = 1
    ),
    _2 = Task(
      state = Active(),
      description = &quot;Another active task&quot;,
      notes = None,
      tags = List(
        Tag(
          tag = &quot;a&quot;
        ),
        Tag(
          tag = &quot;c&quot;
        )
      )
    )
  )
)
[1m=&gt; Diff[0m ([91m- obtained[0m, [92m+ expected[0m)
       state = Active(),
[92m+      description = &quot;An active task&quot;,[0m
[92m+      notes = Some([0m
[92m+        value = &quot;The notes&quot;[0m
[92m+      ),[0m
[92m+      tags = List([0m
[92m+        Tag([0m
[92m+          tag = &quot;a&quot;[0m
[92m+        ),[0m
[92m+        Tag([0m
[92m+          tag = &quot;b&quot;[0m
[92m+        )[0m
[92m+      )[0m
[92m+    )[0m
[92m+  ),[0m
[92m+  Tuple2([0m
[92m+    _1 = Id([0m
[92m+      toInt = 1[0m
[92m+    ),[0m
[92m+    _2 = Task([0m
[92m+      state = Active(),[0m
       description = &quot;Another active task&quot;," type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: munit.ComparisonFailException: C:\Proyectos Scala\todo\src\test\scala\todo\TodoSuite.scala:112
111:
[7m112:      assertEquals(model.tasks(Tag(&quot;a&quot;)).toList, List(id1 -&gt; task1, id3 -&gt; task3))[0m
113:      assertEquals(model.tasks(Tag(&quot;b&quot;)).toList, List(id1 -&gt; task1))
values are not the same
[1m=&gt; Obtained[0m
List(
  Tuple2(
    _1 = Id(
      toInt = 1
    ),
    _2 = Task(
      state = Active(),
      description = &quot;Another active task&quot;,
      notes = None,
      tags = List(
        Tag(
          tag = &quot;a&quot;
        ),
        Tag(
          tag = &quot;c&quot;
        )
      )
    )
  )
)
[1m=&gt; Diff[0m ([91m- obtained[0m, [92m+ expected[0m)
       state = Active(),
[92m+      description = &quot;An active task&quot;,[0m
[92m+      notes = Some([0m
[92m+        value = &quot;The notes&quot;[0m
[92m+      ),[0m
[92m+      tags = List([0m
[92m+        Tag([0m
[92m+          tag = &quot;a&quot;[0m
[92m+        ),[0m
[92m+        Tag([0m
[92m+          tag = &quot;b&quot;[0m
[92m+        )[0m
[92m+      )[0m
[92m+    )[0m
[92m+  ),[0m
[92m+  Tuple2([0m
[92m+    _1 = Id([0m
[92m+      toInt = 1[0m
[92m+    ),[0m
[92m+    _2 = Task([0m
[92m+      state = Active(),[0m
       description = &quot;Another active task&quot;,
	at munit.FunSuite.assertEquals(FunSuite.scala:11)
	at todo.TodoSuite.allTests$$anonfun$5(TodoSuite.scala:112)
	at munit.FunFixtures.munit$FunFixtures$FunFixture$$_$test$$anonfun$2$$anonfun$2$$anonfun$2(FunFixtures.scala:34)
</failure>
                    </testcase><testcase classname="todo.TodoSuite" name="complete changes state to completed, if task is not already completed-1" time="0.068">
                      <failure message="munit.FailException: C:\Proyectos Scala\todo\src\test\scala\todo\TodoSuite.scala:121 Using PersistentModel: We expected the task's state to be active but it was Completed(2021-11-29T16:50:02.711095600-03:00[America/Buenos_Aires])
120:
[7m121:      assertTaskActive(name, model.read(id1))[0m
122:      assertTaskCompleted(name, model.read(id2))" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: munit.FailException: C:\Proyectos Scala\todo\src\test\scala\todo\TodoSuite.scala:121 Using PersistentModel: We expected the task's state to be active but it was Completed(2021-11-29T16:50:02.711095600-03:00[America/Buenos_Aires])
120:
[7m121:      assertTaskActive(name, model.read(id1))[0m
122:      assertTaskCompleted(name, model.read(id2))
	at munit.FunSuite.assert(FunSuite.scala:11)
	at todo.TodoSuite.assertTaskActive(TodoSuite.scala:45)
	at todo.TodoSuite.allTests$$anonfun$6(TodoSuite.scala:18)
	at munit.FunFixtures.munit$FunFixtures$FunFixture$$_$test$$anonfun$2$$anonfun$2$$anonfun$2(FunFixtures.scala:34)
</failure>
                    </testcase><testcase classname="todo.TodoSuite" name="tags returns all tags-1" time="0.235">
                      <failure message="munit.ComparisonFailException: C:\Proyectos Scala\todo\src\test\scala\todo\TodoSuite.scala:135
134:      val id2 = model.create(task2)
[7m135:      assertEquals(model.tags.toList, List(Tag(&quot;a&quot;), Tag(&quot;b&quot;), Tag(&quot;c&quot;)), s&quot;Using $name&quot;)[0m
136:
Using PersistentModel
[1m=&gt; Obtained[0m
List(
  Tag(
    tag = &quot;c&quot;
  )
)
[1m=&gt; Diff[0m ([91m- obtained[0m, [92m+ expected[0m)
   Tag(
[92m+    tag = &quot;a&quot;[0m
[92m+  ),[0m
[92m+  Tag([0m
[92m+    tag = &quot;b&quot;[0m
[92m+  ),[0m
[92m+  Tag([0m
     tag = &quot;c&quot;" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: munit.ComparisonFailException: C:\Proyectos Scala\todo\src\test\scala\todo\TodoSuite.scala:135
134:      val id2 = model.create(task2)
[7m135:      assertEquals(model.tags.toList, List(Tag(&quot;a&quot;), Tag(&quot;b&quot;), Tag(&quot;c&quot;)), s&quot;Using $name&quot;)[0m
136:
Using PersistentModel
[1m=&gt; Obtained[0m
List(
  Tag(
    tag = &quot;c&quot;
  )
)
[1m=&gt; Diff[0m ([91m- obtained[0m, [92m+ expected[0m)
   Tag(
[92m+    tag = &quot;a&quot;[0m
[92m+  ),[0m
[92m+  Tag([0m
[92m+    tag = &quot;b&quot;[0m
[92m+  ),[0m
[92m+  Tag([0m
     tag = &quot;c&quot;
	at munit.FunSuite.assertEquals(FunSuite.scala:11)
	at todo.TodoSuite.allTests$$anonfun$7(TodoSuite.scala:135)
	at munit.FunFixtures.munit$FunFixtures$FunFixture$$_$test$$anonfun$2$$anonfun$2$$anonfun$2(FunFixtures.scala:34)
</failure>
                    </testcase>
          <system-out><![CDATA[]]></system-out>
          <system-err><![CDATA[]]></system-err>
        </testsuite>