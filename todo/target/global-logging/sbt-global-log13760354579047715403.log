[debug] > Exec(compile, None, None)
[info] build source files have changed
[info] modified files: 
[info]   C:\Proyectos Scala\todo\build.sbt
[info] Reloading sbt...
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.3 (Oracle Corporation Java 17.0.1)
[debug]       Load.loadUnit: plugins took 103.2794ms
[debug]       Load.loadUnit: defsScala took 0.0155ms
[debug] [Loading] Scanning directory C:\Users\Gustavo\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Gustavo\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.6633 ms
[debug]           Load.resolveProject(global-plugins) took 4.3293ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Gustavo\.sbt\1.0\plugins, plugins: List(<none>))) took 11.7625ms
[debug] [Loading] Done in C:\Users\Gustavo\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 15.4339ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0293ms
[debug]     Load.loadUnit(file:/C:/Users/Gustavo/.sbt/1.0/plugins/, ...) took 120.8056ms
[debug]   Load.apply: load took 126.8587ms
[debug]   Load.apply: resolveProjects took 0.5104ms
[debug]   Load.apply: finalTransforms took 44.3459ms
[debug]   Load.apply: config.delegates took 0.8084ms
[debug]   Load.apply: Def.make(settings)... took 626.4689ms
[debug]   Load.apply: structureIndex took 205.6104ms
[debug]   Load.apply: mkStreams took 0.026ms
[info] loading global plugins from C:\Users\Gustavo\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Forcing garbage collection...
[debug] Load.defaultLoad until apply took 4492.0338ms
[debug]           Load.loadUnit: plugins took 274.9332ms
[debug]           Load.loadUnit: defsScala took 0.0202ms
[debug] [Loading] Scanning directory C:\Proyectos Scala\todo\project
[debug]             Load.loadUnit: mkEval took 0.8625ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Proyectos Scala\todo\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.1004 ms
[info] loading settings for project todo-build from buildSettings.sbt,plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(todo-build) took 16.45ms
[debug]             Load.loadTransitive: finalizeProject(Project(id todo-build, base: C:\Proyectos Scala\todo\project, plugins: List(<none>))) took 21.9078ms
[debug] [Loading] Done in C:\Proyectos Scala\todo\project, returning: (todo-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 421.236ms
[debug]           Load.loadUnit: cleanEvalClasses took 32.1219ms
[debug]         Load.loadUnit(file:/C:/Proyectos%20Scala/todo/project/, ...) took 730.2157ms
[debug]       Load.apply: load took 756.6048ms
[debug]       Load.apply: resolveProjects took 0.2932ms
[debug]       Load.apply: finalTransforms took 80.381ms
[debug]       Load.apply: config.delegates took 0.6889ms
[debug]       Load.apply: Def.make(settings)... took 759.9016ms
[debug]       Load.apply: structureIndex took 170.3978ms
[debug]       Load.apply: mkStreams took 0.0045ms
[info] loading project definition from C:\Proyectos Scala\todo\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 9590.306ms
[debug]     Load.loadUnit: defsScala took 0.0083ms
[debug] [Loading] Scanning directory C:\Proyectos Scala\todo
[debug]       Load.loadUnit: mkEval took 0.6127ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Proyectos Scala\todo, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(ch.epfl.lamp.StudentTasks), Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(scalafix.sbt.ScalafixPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(scalafix.sbt.ScalafixTestkitPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(ch.epfl.lamp.MOOCSettings),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(ch.epfl.lamp.StudentTasks),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(ch.epfl.lamp.StudentTasks),Set(Atom(ch.epfl.lamp.MOOCSettings)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(scalafix.sbt.ScalafixPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,ch.epfl.lamp.StudentTasks,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,ch.epfl.lamp.MOOCSettings,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,scalafix.sbt.ScalafixPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.9358 ms
[info] loading settings for project todo from assignment.sbt,build.sbt ...
[debug]         Load.resolveProject(todo) took 305.537ms
[debug]       Load.loadTransitive: finalizeProject(Project(id todo, base: C:\Proyectos Scala\todo, plugins: List(<none>))) took 314.7071ms
[debug] [Loading] Done in C:\Proyectos Scala\todo, returning: (todo)
[debug]     Load.loadUnit: loadedProjectsRaw took 4836.7541ms
[debug]     Load.loadUnit: cleanEvalClasses took 160.3662ms
[debug]   Load.loadUnit(file:/C:/Proyectos%20Scala/todo/, ...) took 14588.6976ms
[debug] Load.apply: load took 14638.8081ms
[debug] Load.apply: resolveProjects took 0.2723ms
[debug] Load.apply: finalTransforms took 124.9363ms
[debug] Load.apply: config.delegates took 1.0394ms
[debug] Load.apply: Def.make(settings)... took 2868.0507ms
[debug] Load.apply: structureIndex took 41.5754ms
[debug] Load.apply: mkStreams took 0.0042ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to effective-scala-todo (in build file:/C:/Proyectos%20Scala/todo/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(compile, None, None)
[debug] Evaluating tasks: Compile / compile
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 3 Scala sources to C:\Proyectos Scala\todo\target\scala-3.0.0\classes ...
[warn] -- Warning: C:\Proyectos Scala\todo\src\main\scala\LinkedHashMapExample.scala:7:1 
[warn] 7 | if(listaNueva.contains("LT")){
[warn]   | ^
[warn]   | Line is indented too far to the left, or a `}` is missing
[warn] one warning found
[warn] one warning found
[info] done compiling
[success] Total time: 27 s, completed 24 nov. 2021 16:05:09
[debug] > Exec(idea-shell, None, None)
